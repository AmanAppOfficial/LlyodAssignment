// Generated by Dagger (https://dagger.dev).
package e.aman.catgalleryapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import e.aman.catgalleryapp.data.api.ApiService;
import e.aman.catgalleryapp.domain.repository.CatRepository;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class NetworkModule_ProvideCatRepositoryFactory implements Factory<CatRepository> {
  private final Provider<ApiService> apiProvider;

  public NetworkModule_ProvideCatRepositoryFactory(Provider<ApiService> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public CatRepository get() {
    return provideCatRepository(apiProvider.get());
  }

  public static NetworkModule_ProvideCatRepositoryFactory create(Provider<ApiService> apiProvider) {
    return new NetworkModule_ProvideCatRepositoryFactory(apiProvider);
  }

  public static CatRepository provideCatRepository(ApiService api) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideCatRepository(api));
  }
}
