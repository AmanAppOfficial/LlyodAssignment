// Generated by Dagger (https://dagger.dev).
package e.aman.catgalleryapp.domain.usecase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import e.aman.catgalleryapp.domain.repository.CatRepository;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetAllCatUseCase_Factory implements Factory<GetAllCatUseCase> {
  private final Provider<CatRepository> repositoryProvider;

  public GetAllCatUseCase_Factory(Provider<CatRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetAllCatUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetAllCatUseCase_Factory create(Provider<CatRepository> repositoryProvider) {
    return new GetAllCatUseCase_Factory(repositoryProvider);
  }

  public static GetAllCatUseCase newInstance(CatRepository repository) {
    return new GetAllCatUseCase(repository);
  }
}
