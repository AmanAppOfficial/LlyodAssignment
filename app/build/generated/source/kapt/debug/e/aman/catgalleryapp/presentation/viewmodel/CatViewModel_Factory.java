// Generated by Dagger (https://dagger.dev).
package e.aman.catgalleryapp.presentation.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import e.aman.catgalleryapp.domain.usecase.GetAllCatUseCase;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class CatViewModel_Factory implements Factory<CatViewModel> {
  private final Provider<GetAllCatUseCase> useCaseProvider;

  public CatViewModel_Factory(Provider<GetAllCatUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public CatViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static CatViewModel_Factory create(Provider<GetAllCatUseCase> useCaseProvider) {
    return new CatViewModel_Factory(useCaseProvider);
  }

  public static CatViewModel newInstance(GetAllCatUseCase useCase) {
    return new CatViewModel(useCase);
  }
}
